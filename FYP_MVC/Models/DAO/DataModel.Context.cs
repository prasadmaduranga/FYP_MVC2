//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FYP_MVC.Models.DAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<chart> charts { get; set; }
        public virtual DbSet<chartDimension> chartDimensions { get; set; }
        public virtual DbSet<chartDimensionCardinality> chartDimensionCardinalities { get; set; }
        public virtual DbSet<column> columns { get; set; }
        public virtual DbSet<dimensionContext> dimensionContexts { get; set; }
        public virtual DbSet<dimensionCount> dimensionCounts { get; set; }
        public virtual DbSet<intention> intentions { get; set; }
        public virtual DbSet<originalDataFile> originalDataFiles { get; set; }
        public virtual DbSet<table> tables { get; set; }
        public virtual DbSet<tableDimension> tableDimensions { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<visualizedDataFile> visualizedDataFiles { get; set; }
        public virtual DbSet<feedBack> feedBacks { get; set; }
        public virtual DbSet<userFeedBack> userFeedBacks { get; set; }
        public virtual DbSet<chartRuleBase_View> chartRuleBase_View { get; set; }
    
        public virtual int calculateCosineScore(Nullable<int> dim1_numOfDim, string intention, Nullable<int> dim1_IsContinuous, Nullable<int> dim1_Cardinality, string dim1_context, Nullable<int> dim2_IsContinuous, Nullable<int> dim2_Cardinality, string dim2_context, Nullable<int> dim3_IsContinuous, Nullable<int> dim3_Cardinality, string dim3_context)
        {
            var dim1_numOfDimParameter = dim1_numOfDim.HasValue ?
                new ObjectParameter("dim1_numOfDim", dim1_numOfDim) :
                new ObjectParameter("dim1_numOfDim", typeof(int));
    
            var intentionParameter = intention != null ?
                new ObjectParameter("intention", intention) :
                new ObjectParameter("intention", typeof(string));
    
            var dim1_IsContinuousParameter = dim1_IsContinuous.HasValue ?
                new ObjectParameter("dim1_IsContinuous", dim1_IsContinuous) :
                new ObjectParameter("dim1_IsContinuous", typeof(int));
    
            var dim1_CardinalityParameter = dim1_Cardinality.HasValue ?
                new ObjectParameter("dim1_Cardinality", dim1_Cardinality) :
                new ObjectParameter("dim1_Cardinality", typeof(int));
    
            var dim1_contextParameter = dim1_context != null ?
                new ObjectParameter("dim1_context", dim1_context) :
                new ObjectParameter("dim1_context", typeof(string));
    
            var dim2_IsContinuousParameter = dim2_IsContinuous.HasValue ?
                new ObjectParameter("dim2_IsContinuous", dim2_IsContinuous) :
                new ObjectParameter("dim2_IsContinuous", typeof(int));
    
            var dim2_CardinalityParameter = dim2_Cardinality.HasValue ?
                new ObjectParameter("dim2_Cardinality", dim2_Cardinality) :
                new ObjectParameter("dim2_Cardinality", typeof(int));
    
            var dim2_contextParameter = dim2_context != null ?
                new ObjectParameter("dim2_context", dim2_context) :
                new ObjectParameter("dim2_context", typeof(string));
    
            var dim3_IsContinuousParameter = dim3_IsContinuous.HasValue ?
                new ObjectParameter("dim3_IsContinuous", dim3_IsContinuous) :
                new ObjectParameter("dim3_IsContinuous", typeof(int));
    
            var dim3_CardinalityParameter = dim3_Cardinality.HasValue ?
                new ObjectParameter("dim3_Cardinality", dim3_Cardinality) :
                new ObjectParameter("dim3_Cardinality", typeof(int));
    
            var dim3_contextParameter = dim3_context != null ?
                new ObjectParameter("dim3_context", dim3_context) :
                new ObjectParameter("dim3_context", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("calculateCosineScore", dim1_numOfDimParameter, intentionParameter, dim1_IsContinuousParameter, dim1_CardinalityParameter, dim1_contextParameter, dim2_IsContinuousParameter, dim2_CardinalityParameter, dim2_contextParameter, dim3_IsContinuousParameter, dim3_CardinalityParameter, dim3_contextParameter);
        }
    
        public virtual int calculateCosineScore2(Nullable<int> numOfDim, string intention, Nullable<int> dim1_IsContinuous, Nullable<int> dim1_Cardinality, string dim1_context, Nullable<int> dim2_IsContinuous, Nullable<int> dim2_Cardinality, string dim2_context, Nullable<int> dim3_IsContinuous, Nullable<int> dim3_Cardinality, string dim3_context)
        {
            var numOfDimParameter = numOfDim.HasValue ?
                new ObjectParameter("numOfDim", numOfDim) :
                new ObjectParameter("numOfDim", typeof(int));
    
            var intentionParameter = intention != null ?
                new ObjectParameter("intention", intention) :
                new ObjectParameter("intention", typeof(string));
    
            var dim1_IsContinuousParameter = dim1_IsContinuous.HasValue ?
                new ObjectParameter("dim1_IsContinuous", dim1_IsContinuous) :
                new ObjectParameter("dim1_IsContinuous", typeof(int));
    
            var dim1_CardinalityParameter = dim1_Cardinality.HasValue ?
                new ObjectParameter("dim1_Cardinality", dim1_Cardinality) :
                new ObjectParameter("dim1_Cardinality", typeof(int));
    
            var dim1_contextParameter = dim1_context != null ?
                new ObjectParameter("dim1_context", dim1_context) :
                new ObjectParameter("dim1_context", typeof(string));
    
            var dim2_IsContinuousParameter = dim2_IsContinuous.HasValue ?
                new ObjectParameter("dim2_IsContinuous", dim2_IsContinuous) :
                new ObjectParameter("dim2_IsContinuous", typeof(int));
    
            var dim2_CardinalityParameter = dim2_Cardinality.HasValue ?
                new ObjectParameter("dim2_Cardinality", dim2_Cardinality) :
                new ObjectParameter("dim2_Cardinality", typeof(int));
    
            var dim2_contextParameter = dim2_context != null ?
                new ObjectParameter("dim2_context", dim2_context) :
                new ObjectParameter("dim2_context", typeof(string));
    
            var dim3_IsContinuousParameter = dim3_IsContinuous.HasValue ?
                new ObjectParameter("dim3_IsContinuous", dim3_IsContinuous) :
                new ObjectParameter("dim3_IsContinuous", typeof(int));
    
            var dim3_CardinalityParameter = dim3_Cardinality.HasValue ?
                new ObjectParameter("dim3_Cardinality", dim3_Cardinality) :
                new ObjectParameter("dim3_Cardinality", typeof(int));
    
            var dim3_contextParameter = dim3_context != null ?
                new ObjectParameter("dim3_context", dim3_context) :
                new ObjectParameter("dim3_context", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("calculateCosineScore2", numOfDimParameter, intentionParameter, dim1_IsContinuousParameter, dim1_CardinalityParameter, dim1_contextParameter, dim2_IsContinuousParameter, dim2_CardinalityParameter, dim2_contextParameter, dim3_IsContinuousParameter, dim3_CardinalityParameter, dim3_contextParameter);
        }
    
        public virtual int calculateScoreOfPermutumVersion2(ObjectParameter result, string intention, Nullable<int> dim1_IsContinuous, Nullable<int> dim1_Cardinality, string dim1_context, Nullable<int> dim2_IsContinuous, Nullable<int> dim2_Cardinality, string dim2_context, Nullable<int> dim3_IsContinuous, Nullable<int> dim3_Cardinality, string dim3_context, string curr_intention, Nullable<int> curr_dim1_IsContinuous, Nullable<int> curr_dim1_Cardinality, string curr_dim1_context, Nullable<int> curr_dim2_IsContinuous, Nullable<int> curr_dim2_Cardinality, string curr_dim2_context, Nullable<int> curr_dim3_IsContinuous, Nullable<int> curr_dim3_Cardinality, string curr_dim3_context)
        {
            var intentionParameter = intention != null ?
                new ObjectParameter("intention", intention) :
                new ObjectParameter("intention", typeof(string));
    
            var dim1_IsContinuousParameter = dim1_IsContinuous.HasValue ?
                new ObjectParameter("dim1_IsContinuous", dim1_IsContinuous) :
                new ObjectParameter("dim1_IsContinuous", typeof(int));
    
            var dim1_CardinalityParameter = dim1_Cardinality.HasValue ?
                new ObjectParameter("dim1_Cardinality", dim1_Cardinality) :
                new ObjectParameter("dim1_Cardinality", typeof(int));
    
            var dim1_contextParameter = dim1_context != null ?
                new ObjectParameter("dim1_context", dim1_context) :
                new ObjectParameter("dim1_context", typeof(string));
    
            var dim2_IsContinuousParameter = dim2_IsContinuous.HasValue ?
                new ObjectParameter("dim2_IsContinuous", dim2_IsContinuous) :
                new ObjectParameter("dim2_IsContinuous", typeof(int));
    
            var dim2_CardinalityParameter = dim2_Cardinality.HasValue ?
                new ObjectParameter("dim2_Cardinality", dim2_Cardinality) :
                new ObjectParameter("dim2_Cardinality", typeof(int));
    
            var dim2_contextParameter = dim2_context != null ?
                new ObjectParameter("dim2_context", dim2_context) :
                new ObjectParameter("dim2_context", typeof(string));
    
            var dim3_IsContinuousParameter = dim3_IsContinuous.HasValue ?
                new ObjectParameter("dim3_IsContinuous", dim3_IsContinuous) :
                new ObjectParameter("dim3_IsContinuous", typeof(int));
    
            var dim3_CardinalityParameter = dim3_Cardinality.HasValue ?
                new ObjectParameter("dim3_Cardinality", dim3_Cardinality) :
                new ObjectParameter("dim3_Cardinality", typeof(int));
    
            var dim3_contextParameter = dim3_context != null ?
                new ObjectParameter("dim3_context", dim3_context) :
                new ObjectParameter("dim3_context", typeof(string));
    
            var curr_intentionParameter = curr_intention != null ?
                new ObjectParameter("Curr_intention", curr_intention) :
                new ObjectParameter("Curr_intention", typeof(string));
    
            var curr_dim1_IsContinuousParameter = curr_dim1_IsContinuous.HasValue ?
                new ObjectParameter("Curr_dim1_IsContinuous", curr_dim1_IsContinuous) :
                new ObjectParameter("Curr_dim1_IsContinuous", typeof(int));
    
            var curr_dim1_CardinalityParameter = curr_dim1_Cardinality.HasValue ?
                new ObjectParameter("Curr_dim1_Cardinality", curr_dim1_Cardinality) :
                new ObjectParameter("Curr_dim1_Cardinality", typeof(int));
    
            var curr_dim1_contextParameter = curr_dim1_context != null ?
                new ObjectParameter("Curr_dim1_context", curr_dim1_context) :
                new ObjectParameter("Curr_dim1_context", typeof(string));
    
            var curr_dim2_IsContinuousParameter = curr_dim2_IsContinuous.HasValue ?
                new ObjectParameter("Curr_dim2_IsContinuous", curr_dim2_IsContinuous) :
                new ObjectParameter("Curr_dim2_IsContinuous", typeof(int));
    
            var curr_dim2_CardinalityParameter = curr_dim2_Cardinality.HasValue ?
                new ObjectParameter("Curr_dim2_Cardinality", curr_dim2_Cardinality) :
                new ObjectParameter("Curr_dim2_Cardinality", typeof(int));
    
            var curr_dim2_contextParameter = curr_dim2_context != null ?
                new ObjectParameter("Curr_dim2_context", curr_dim2_context) :
                new ObjectParameter("Curr_dim2_context", typeof(string));
    
            var curr_dim3_IsContinuousParameter = curr_dim3_IsContinuous.HasValue ?
                new ObjectParameter("Curr_dim3_IsContinuous", curr_dim3_IsContinuous) :
                new ObjectParameter("Curr_dim3_IsContinuous", typeof(int));
    
            var curr_dim3_CardinalityParameter = curr_dim3_Cardinality.HasValue ?
                new ObjectParameter("Curr_dim3_Cardinality", curr_dim3_Cardinality) :
                new ObjectParameter("Curr_dim3_Cardinality", typeof(int));
    
            var curr_dim3_contextParameter = curr_dim3_context != null ?
                new ObjectParameter("Curr_dim3_context", curr_dim3_context) :
                new ObjectParameter("Curr_dim3_context", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("calculateScoreOfPermutumVersion2", result, intentionParameter, dim1_IsContinuousParameter, dim1_CardinalityParameter, dim1_contextParameter, dim2_IsContinuousParameter, dim2_CardinalityParameter, dim2_contextParameter, dim3_IsContinuousParameter, dim3_CardinalityParameter, dim3_contextParameter, curr_intentionParameter, curr_dim1_IsContinuousParameter, curr_dim1_CardinalityParameter, curr_dim1_contextParameter, curr_dim2_IsContinuousParameter, curr_dim2_CardinalityParameter, curr_dim2_contextParameter, curr_dim3_IsContinuousParameter, curr_dim3_CardinalityParameter, curr_dim3_contextParameter);
        }
    
        public virtual int getRecommendationFromRules(Nullable<int> tableID)
        {
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("tableID", tableID) :
                new ObjectParameter("tableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getRecommendationFromRules", tableIDParameter);
        }
    
        public virtual ObjectResult<readResults_Result> readResults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<readResults_Result>("readResults");
        }
    }
}
